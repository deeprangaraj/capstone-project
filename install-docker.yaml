---
- hosts: workers
  become: true
  become_method: sudo
  vars:
     user_name: ubuntu        
  
  tasks:
          
  # Install Docker
  # --
  #
  - name: Update apt package manager repositories cache
    apt:
        update_cache: yes

  - name: Install Java using Ansible
    apt:
        name: "{{ packages }}"
        state: present
    vars:
        packages:
           - openjdk-11-jdk

  - name: Install Maven  using Ansible
    apt:
        name: "{{ packages }}"
        state: present
    vars:
        packages:
           - maven
  
  - name: Install Git using Ansible
    apt:
        name: "{{ packages }}"
        state: present
    vars:
        packages:
           - git
           -
  - name: install prerequisites
    apt:
      name:
        - apt-transport-https
        - ca-certificates 
        - curl 
        - gnupg-agent
        - software-properties-common
      update_cache: yes

  - name: add apt-key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg

  - name: add docker repo
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu focal stable

  - name: install docker 
    apt:
      name: 
        - docker-ce
        - docker-ce-cli
        - containerd.io
      update_cache: yes

  - name: add userpermissions
    shell: "usermod -aG docker {{ user_name }}"

  - name: replace text
    ansible.builtin.replace:
      path: /tmp/a.txt
      regexp: 'ExecStart=(.*)$'
      replace: 'ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock'

  # Installs Docker SDK
  # --
  # 
  - name: install python package manager
    apt:
      name: python3-pip
  
  - name: install python sdk
    become_user: "{{ user_name }}"
    pip:
      name:
        - docker
        - docker-compose

  - name: Reboot the server
    tags: reboot
    become: yes
    become_user: root
    shell: "sleep 5 && reboot"
    async: 1
    poll: 0

  - name: Wait for the reboot to complete if there was a change.
    wait_for_connection:
      connect_timeout: 10
      sleep: 5
      delay: 5
      timeout: 300

  - name: Check the Uptime of the servers
    shell: "uptime"
    register: Uptime

  - debug: var=Uptime
